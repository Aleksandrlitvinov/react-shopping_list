{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartProducts: [],\n  totalPrice: 0,\n  countPs: 0,\n  countKg: 0,\n  totalCount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addCartItem(state, action) {\n      const findItem = state.cartProducts.find(item => item.title === action.payload.title);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.cartProducts.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      const itemsKg = state.cartProducts.filter(item => item.measure === 'kilograms');\n      const itemsPs = state.cartProducts.filter(item => item.measure === 'peaces');\n      state.totalPrice = state.cartProducts.reduce((sum, product) => sum + product.price * product.count, 0);\n      state.totalCount = state.cartProducts.reduce((sum, product) => sum + product.count, 0);\n      state.countKg = itemsKg.reduce((sum, product) => sum + product.count, 0);\n      state.countPs = itemsPs.reduce((sum, product) => sum + product.count, 0);\n    },\n    minusCartItem(state, action) {\n      const findItem = state.cartProducts.find(item => item.title === action.payload);\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n    removeCartItem(state, action) {\n      state.cartProducts = state.cartProducts.filter(product => product.title !== action.payload);\n    },\n    clearItems(state) {\n      state.cartProducts = [];\n    }\n  }\n});\nexport const {\n  addCartItem,\n  removeCartItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartProducts","totalPrice","countPs","countKg","totalCount","cartSlice","name","reducers","addCartItem","state","action","findItem","find","item","title","payload","count","push","itemsKg","filter","measure","itemsPs","reduce","sum","product","price","minusCartItem","removeCartItem","clearItems","actions","reducer"],"sources":["/Users/aleksandr/Desktop/pet_projects/shopping_list/shopping_list/src/redux/slices/cartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cartProducts: [],\n  totalPrice: 0,\n  countPs: 0,\n  countKg: 0,\n  totalCount: 0,\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n\n  reducers: {\n\n    addCartItem(state, action) {\n      const findItem = state.cartProducts.find(item => item.title === action.payload.title)\n\n      if (findItem) {\n        findItem.count++\n      } else {\n        state.cartProducts.push({\n          ...action.payload,\n          count: 1\n        })\n      }\n\n      const itemsKg = state.cartProducts.filter(item => item.measure === 'kilograms')\n      const itemsPs = state.cartProducts.filter(item => item.measure === 'peaces')\n\n      state.totalPrice = state.cartProducts.reduce((sum, product) => sum + (product.price * product.count), 0)\n      state.totalCount = state.cartProducts.reduce((sum, product) => sum + product.count, 0)\n\n      state.countKg = itemsKg.reduce((sum, product) => sum + product.count, 0)\n      state.countPs = itemsPs.reduce((sum, product) => sum + product.count, 0)\n    },\n\n    minusCartItem(state, action) {\n      const findItem = state.cartProducts.find(item => item.title === action.payload)\n      if (findItem) {\n        findItem.count--\n      }\n    },\n\n    removeCartItem(state, action) {\n      state.cartProducts = state.cartProducts.filter(product => product.title !== action.payload)\n    },\n\n    clearItems(state) {\n      state.cartProducts = []\n    },\n  }\n})\n\nexport const {addCartItem, removeCartItem,} = cartSlice.actions\nexport default cartSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE,CAAC;EACbC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE,CAAC;EACVC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EAEZQ,QAAQ,EAAE;IAERC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,QAAQ,GAAGF,KAAK,CAACT,YAAY,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKJ,MAAM,CAACK,OAAO,CAACD,KAAK,CAAC;MAErF,IAAIH,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB,CAAC,MAAM;QACLP,KAAK,CAACT,YAAY,CAACiB,IAAI,CAAC;UACtB,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MAEA,MAAME,OAAO,GAAGT,KAAK,CAACT,YAAY,CAACmB,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACO,OAAO,KAAK,WAAW,CAAC;MAC/E,MAAMC,OAAO,GAAGZ,KAAK,CAACT,YAAY,CAACmB,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACO,OAAO,KAAK,QAAQ,CAAC;MAE5EX,KAAK,CAACR,UAAU,GAAGQ,KAAK,CAACT,YAAY,CAACsB,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAIC,OAAO,CAACC,KAAK,GAAGD,OAAO,CAACR,KAAM,EAAE,CAAC,CAAC;MACxGP,KAAK,CAACL,UAAU,GAAGK,KAAK,CAACT,YAAY,CAACsB,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,CAACR,KAAK,EAAE,CAAC,CAAC;MAEtFP,KAAK,CAACN,OAAO,GAAGe,OAAO,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,CAACR,KAAK,EAAE,CAAC,CAAC;MACxEP,KAAK,CAACP,OAAO,GAAGmB,OAAO,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,CAACR,KAAK,EAAE,CAAC,CAAC;IAC1E,CAAC;IAEDU,aAAaA,CAACjB,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,QAAQ,GAAGF,KAAK,CAACT,YAAY,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKJ,MAAM,CAACK,OAAO,CAAC;MAC/E,IAAIJ,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB;IACF,CAAC;IAEDW,cAAcA,CAAClB,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACT,YAAY,GAAGS,KAAK,CAACT,YAAY,CAACmB,MAAM,CAACK,OAAO,IAAIA,OAAO,CAACV,KAAK,KAAKJ,MAAM,CAACK,OAAO,CAAC;IAC7F,CAAC;IAEDa,UAAUA,CAACnB,KAAK,EAAE;MAChBA,KAAK,CAACT,YAAY,GAAG,EAAE;IACzB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAACQ,WAAW;EAAEmB;AAAe,CAAC,GAAGtB,SAAS,CAACwB,OAAO;AAC/D,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}