{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartProducts: [],\n  totalPrice: 0,\n  countPs: 0,\n  countKg: 0,\n  countPack: 0,\n  totalCount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    updateCountValues(state) {\n      const itemsKg = state.cartProducts.filter(item => item.measure === 'kilograms');\n      const itemsPs = state.cartProducts.filter(item => item.measure === 'peaces');\n      const itemsPack = state.cartProducts.filter(item => item.measure === 'pack');\n      state.totalPrice = state.cartProducts.reduce((sum, product) => sum + product.price * product.count, 0).toFixed(2);\n      state.totalCount = state.cartProducts.reduce((sum, product) => sum + product.count, 0);\n      state.countKg = itemsKg.reduce((sum, product) => sum + product.count, 0);\n      state.countPs = itemsPs.reduce((sum, product) => sum + product.count, 0);\n      state.countPack = itemsPack.reduce((sum, product) => sum + product.count, 0);\n    },\n    addCartItem(state, action) {\n      const findItem = state.cartProducts.find(item => item.title === action.payload.title);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.cartProducts.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n    },\n    minusCartItem(state, action) {\n      const findItem = state.cartProducts.find(item => item.title === action.payload);\n      if (findItem && findItem.count > 1) {\n        findItem.count--;\n      }\n    },\n    removeCartItem(state, action) {\n      state.cartProducts = state.cartProducts.filter(product => product.title !== action.payload);\n    },\n    clearItems(state) {\n      state.cartProducts = [];\n      state.totalPrice = 0;\n    }\n  }\n});\nexport const selectCartProducts = state => state.cart.cartProducts.length;\nexport const selectCartTotalPrice = state => state.cart.cartProducts.totalPrice;\nexport const {\n  addCartItem,\n  minusCartItem,\n  removeCartItem,\n  clearItems,\n  updateCountValues\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartProducts","totalPrice","countPs","countKg","countPack","totalCount","cartSlice","name","reducers","updateCountValues","state","itemsKg","filter","item","measure","itemsPs","itemsPack","reduce","sum","product","price","count","toFixed","addCartItem","action","findItem","find","title","payload","push","minusCartItem","removeCartItem","clearItems","selectCartProducts","cart","length","selectCartTotalPrice","actions","reducer"],"sources":["/Users/aleksandr/Desktop/pet_projects/shopping_list/shopping_list/src/redux/slices/cartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cartProducts: [],\n  totalPrice: 0,\n  countPs: 0,\n  countKg: 0,\n  countPack: 0,\n  totalCount: 0,\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n\n  reducers: {\n\n    updateCountValues(state) {\n\n      const itemsKg = state.cartProducts.filter(item => item.measure === 'kilograms')\n      const itemsPs = state.cartProducts.filter(item => item.measure === 'peaces')\n      const itemsPack = state.cartProducts.filter(item => item.measure === 'pack')\n\n      state.totalPrice = state.cartProducts.reduce((sum, product) => sum + (product.price * product.count), 0).toFixed(2)\n      state.totalCount = state.cartProducts.reduce((sum, product) => sum + product.count, 0)\n\n      state.countKg = itemsKg.reduce((sum, product) => sum + product.count, 0)\n      state.countPs = itemsPs.reduce((sum, product) => sum + product.count, 0)\n      state.countPack = itemsPack.reduce((sum, product) => sum + product.count, 0)\n    },\n\n    addCartItem(state, action) {\n      const findItem = state.cartProducts.find(item => item.title === action.payload.title)\n\n      if (findItem) {\n        findItem.count++\n      } else {\n        state.cartProducts.push({\n          ...action.payload,\n          count: 1\n        })\n      }\n    },\n\n    minusCartItem(state, action) {\n\n      const findItem = state.cartProducts.find(item => item.title === action.payload)\n      if (findItem && findItem.count > 1) {\n        findItem.count--\n      }\n    },\n\n    removeCartItem(state, action) {\n\n      state.cartProducts = state.cartProducts.filter(product => product.title !== action.payload)\n    },\n\n    clearItems(state) {\n      state.cartProducts = []\n      state.totalPrice = 0\n    },\n  }\n})\n\nexport const selectCartProducts = (state) => state.cart.cartProducts.length\nexport const selectCartTotalPrice = (state) => state.cart.cartProducts.totalPrice\n\nexport const {\n  addCartItem,\n  minusCartItem,\n  removeCartItem,\n  clearItems,\n  updateCountValues\n} = cartSlice.actions\nexport default cartSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}