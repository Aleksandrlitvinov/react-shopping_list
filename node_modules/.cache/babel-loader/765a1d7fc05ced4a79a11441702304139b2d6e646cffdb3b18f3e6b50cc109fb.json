{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartProducts: [],\n  totalPrice: 0,\n  countPs: 0,\n  countKg: 0,\n  totalCount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addCartItem(state, action) {\n      const findItem = state.cartProducts.find(item => item.title === action.payload.title);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.cartProducts.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      const newCartProducts = [...state.cartProducts, action.payload];\n      state.totalPrice = newCartProducts.reduce((sum, product) => sum + product.price, 0);\n      //state.countPs = newCartProducts.filter(product => product.measure === action.payload.measure).length\n      //state.countKg = newCartProducts.filter(product => product.measure === action.payload.measure).length\n    },\n\n    // addCartItem(state, action) {\n    //   const newCartProducts = [...state.cartProducts, action.payload]\n    //   state.cartProducts.push(action.payload)\n    //   state.totalPrice = newCartProducts.reduce((sum, product) => sum + product.price, 0)\n    //   //state.countPs = newCartProducts.filter(product => product.measure === action.payload.measure).length\n    //   //state.countKg = newCartProducts.filter(product => product.measure === action.payload.measure).length\n    // },\n\n    removeCartItem(state, action) {\n      state.cartProducts = state.cartProducts.filter(product => product.name !== action.payload);\n    },\n    countSumKg(state, action) {\n      state.countKg = state.countKg + action.payload;\n    },\n    countSumPs(state, action) {\n      state.countPs = state.countPs + action.payload;\n    },\n    setTotalCount(state) {\n      state.totalCount = state.countPs + state.countKg;\n    },\n    clearItems(state) {\n      state.cartProducts = [];\n    }\n  }\n});\nexport const {\n  addCartItem,\n  removeCartItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartProducts","totalPrice","countPs","countKg","totalCount","cartSlice","name","reducers","addCartItem","state","action","findItem","find","item","title","payload","count","push","newCartProducts","reduce","sum","product","price","removeCartItem","filter","countSumKg","countSumPs","setTotalCount","clearItems","actions","reducer"],"sources":["/Users/aleksandr/Desktop/pet_projects/shopping_list/shopping_list/src/redux/slices/cartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cartProducts: [],\n  totalPrice: 0,\n  countPs: 0,\n  countKg: 0,\n  totalCount: 0,\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n\n  reducers: {\n\n    addCartItem(state, action) {\n      const findItem = state.cartProducts.find(item => item.title === action.payload.title)\n\n      if(findItem){\n        findItem.count++\n      }else{\n        state.cartProducts.push({\n          ...action.payload,\n          count: 1\n        })\n      }\n      const newCartProducts = [...state.cartProducts, action.payload]\n\n      state.totalPrice = newCartProducts.reduce((sum, product) => sum + product.price, 0)\n      //state.countPs = newCartProducts.filter(product => product.measure === action.payload.measure).length\n      //state.countKg = newCartProducts.filter(product => product.measure === action.payload.measure).length\n    },\n    // addCartItem(state, action) {\n    //   const newCartProducts = [...state.cartProducts, action.payload]\n    //   state.cartProducts.push(action.payload)\n    //   state.totalPrice = newCartProducts.reduce((sum, product) => sum + product.price, 0)\n    //   //state.countPs = newCartProducts.filter(product => product.measure === action.payload.measure).length\n    //   //state.countKg = newCartProducts.filter(product => product.measure === action.payload.measure).length\n    // },\n\n    removeCartItem(state, action) {\n      state.cartProducts = state.cartProducts.filter(product => product.name !== action.payload)\n    },\n\n    countSumKg(state, action) {\n      state.countKg = state.countKg + action.payload\n    },\n\n    countSumPs(state, action) {\n      state.countPs = state.countPs + action.payload\n    },\n\n    setTotalCount(state) {\n      state.totalCount = state.countPs + state.countKg\n    },\n\n    clearItems(state) {\n      state.cartProducts = []\n    },\n  }\n})\n\nexport const {addCartItem, removeCartItem,} = cartSlice.actions\nexport default cartSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE,CAAC;EACbC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE,CAAC;EACVC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EAEZQ,QAAQ,EAAE;IAERC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,QAAQ,GAAGF,KAAK,CAACT,YAAY,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKJ,MAAM,CAACK,OAAO,CAACD,KAAK,CAAC;MAErF,IAAGH,QAAQ,EAAC;QACVA,QAAQ,CAACK,KAAK,EAAE;MAClB,CAAC,MAAI;QACHP,KAAK,CAACT,YAAY,CAACiB,IAAI,CAAC;UACtB,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MACA,MAAME,eAAe,GAAG,CAAC,GAAGT,KAAK,CAACT,YAAY,EAAEU,MAAM,CAACK,OAAO,CAAC;MAE/DN,KAAK,CAACR,UAAU,GAAGiB,eAAe,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,CAACC,KAAK,EAAE,CAAC,CAAC;MACnF;MACA;IACF,CAAC;;IACD;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAC,cAAcA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACT,YAAY,GAAGS,KAAK,CAACT,YAAY,CAACwB,MAAM,CAACH,OAAO,IAAIA,OAAO,CAACf,IAAI,KAAKI,MAAM,CAACK,OAAO,CAAC;IAC5F,CAAC;IAEDU,UAAUA,CAAChB,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACK,OAAO;IAChD,CAAC;IAEDW,UAAUA,CAACjB,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACK,OAAO;IAChD,CAAC;IAEDY,aAAaA,CAAClB,KAAK,EAAE;MACnBA,KAAK,CAACL,UAAU,GAAGK,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACN,OAAO;IAClD,CAAC;IAEDyB,UAAUA,CAACnB,KAAK,EAAE;MAChBA,KAAK,CAACT,YAAY,GAAG,EAAE;IACzB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAACQ,WAAW;EAAEe;AAAe,CAAC,GAAGlB,SAAS,CAACwB,OAAO;AAC/D,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}